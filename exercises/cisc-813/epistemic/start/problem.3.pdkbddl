


(define (domain treasure)

    ; Note that we've said goodbye to agent d for now
    (:agents a b c)

    (:types loc)
    (:constants )

    (:predicates
            (has-treasure ?agent)
            (treasure-at ?l - loc)
        {AK}(at ?agent - agent ?l - loc)
        {AK}(connected ?l1 ?l2 - loc)
    )

    (:action move
        :derive-condition   always
        :parameters         (?a - agent ?l1 ?l2 - loc)
        :precondition       (and (at ?a ?l1) (connected ?l1 ?l2))
        :effect             (and (at ?a ?l2) (!at ?a ?l1))
    )

    (:action take
        :derive-condition (at $agent$ ?l)
        :parameters       (?a - agent ?l - loc)
        :precondition     (and (at ?a ?l) (treasure-at ?l))
        :effect           (and (forall ?l2 - loc (!treasure-at ?l2)) (has-treasure ?a))
    )

    (:action drop
        :derive-condition (at $agent$ ?l)
        :parameters       (?a - agent ?l - loc)
        :precondition     (and (at ?a ?l) (has-treasure ?a))
        :effect           (and (forall ?a2 - agent (!has-treasure ?a2)) (treasure-at ?l))
    )

    ; Ask action can now be overheard by other agents in the same location
    (:action ask

        ; TODO: Want to derive the conditions when agents are here

        :parameters (?a1 ?a2 ?a3 - agent ?l - loc)
        :precondition (and (at ?a1 ?l) (at ?a2 ?l))

        :effect (and
            ; ?a1 believes what ?a2 does about ?a3 holding the treasure
            (when [?a2](has-treasure ?a3) [?a1](has-treasure ?a3))
            (when [?a2](!has-treasure ?a3) [?a1](!has-treasure ?a3))

            ; TODO: Under the same conditions ?a1 also believes that ?a2 believes their response

        )
    )

)

(define (problem treasure3)

    (:domain treasure)

    ; Note: Reduced to just 2 locations now.
    (:objects l0 l1 - loc)

    (:projection )
    (:task valid_generation)

    (:init-type complete)
    (:init

        ; Just a pair of rooms
        (connected l1 l0)
        (connected l0 l1)

        (at a l1)
        (at b l0)
        (at c l0)

        ; Treasure in l1
        (treasure-at l1)

    )

    (:depth 2)

    ; Goal:
    ;   - a has the treasure
    ;   - b and c believe a has the treasure
    ;   - b and c believe each other believes that a /doesn't/ have the treasure
    ;   - all agents are all in l0
    (:goal


        ; TODO


    )
)
