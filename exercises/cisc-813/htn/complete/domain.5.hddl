(define (domain restaurant)
    (:requirements :strips :typing :hierarchy)

    (:types
        food person location - object
        server chef guest - person
        meal dish - food
    )

    (:constants
        front-of-house kitchen fridge floor1 floor2 - location

        ; https://www.eatingwell.com/article/7992234/every-dish-they-make-on-the-bear-plus-recipes/
        beef-sandwich beef-braciole chicken-suqaar chicken-piccata - dish
    )

    (:predicates
        (connected ?l1 ?l2 - location)
        (at ?p - person ?l - location)
        (has ?f - food ?p - person)
        (order-in ?g - guest)
        (ordered ?d - dish)
        (prepared ?m - meal)
    )

    (:task take-orders)
    (:task order :parameters (?d - dish ?g - guest))
    (:task hands :parameters (?m - meal ?g - guest))
    (:task goto :parameters (?s - person ?d - location))

    (:method m_take-orders
        :parameters (?d - dish ?g - guest ?s - server ?l - location)
        :task (take-orders)
        :precondition (not (order-in ?g))
        :ordered-subtasks (and
            (order ?d ?g)
            (take-orders)
        )
    )

    (:method m_done-taking-orders
        :task (take-orders)
        :precondition (forall (?g - guest) (order-in ?g))
        :subtasks ()
    )

    (:method m_handle-order
        :parameters (?m - meal ?d - dish ?g - guest ?c - chef ?l - location ?s - server)
        :task (order ?d ?g)
        :precondition (and
            (at ?s front-of-house)
            (at ?g ?l)
        )
        :ordered-subtasks (and
            (goto ?s ?l)
            (register-order ?d ?g)
            (goto ?s kitchen)
            (prepare ?m ?d ?c)
            (goto ?s front-of-house)
            (hands ?m ?g)
        )
    )

    (:method m_deliver-meal
        :parameters (?m - meal ?g - guest ?s - server ?l - location)
        :task (hands ?m ?g)
        :precondition (at ?g ?l)
        :ordered-subtasks (and
            (goto ?s kitchen)
            (pickup ?m ?s kitchen)
            (goto ?s ?l)
            (dropoff ?m ?g ?s ?l)
            (goto ?s front-of-house)
        )
    )

    (:method m_goto
        :parameters (?p - person ?cur ?next ?dest - location)
        :task (goto ?p ?dest)
        :ordered-subtasks (and
            (move ?p ?cur ?next)
            (goto ?p ?dest)
        )
    )

    (:method m_goto_done
        :parameters (?p - person ?dest - location)
        :task (goto ?p ?dest)
        :precondition (at ?p ?dest)
        :subtasks ()
    )

    (:action register-order
        :parameters (?d - dish ?g - guest)
        :effect (and
            (order-in ?g)
            (ordered ?d)
        )
    )

    (:action move
        :parameters (?p - person ?l1 ?l2 - location)
        :precondition (and
            (at ?p ?l1)
            (connected ?l1 ?l2)
        )
        :effect (and
            (not (at ?p ?l1))
            (at ?p ?l2)
        )
    )

    (:action pickup
        :parameters (?m - meal ?s - server ?l - location)
        :precondition (and (at ?s ?l) (at ?m ?l))
        :effect (and (has ?m ?s) (not (at ?m ?l)))
    )

    (:action dropoff
        :parameters (?m - meal ?g - guest ?s - server ?l - location)
        :precondition (and
            (at ?s ?l)
            (at ?g ?l)
            (has ?m ?s)
        )
        :effect (and
            (not (has ?m ?s))
            (has ?m ?g)
        )
    )

    (:action prepare
        :parameters (?m - meal ?d - dish ?c - chef)
        :precondition (and
            (at ?c kitchen)
            (not (prepared ?m))
        )
        :effect (and
            (at ?m kitchen)
            (ordered ?d)
            (prepared ?m)
        )
    )

)
